{"version":3,"file":"shopping-cart.js","sourceRoot":"","sources":["src/shopping-cart.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAQ5D;;GAEG;AAEH,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QAqBI,SAAI,GAAqB,EAAE,CAAC;IA6BhC,CAAC;IA3BG,UAAU;QACN,KAAK,CAAC,4BAA4B,CAAC;aAC9B,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;aACvB,IAAI,CAAC,CAAC,IAAsB,EAAE,EAAE;YAC7B,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAA;QACxD,CAAC,CAAC;aACD,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;IAC7B,CAAC;IAED,iBAAiB;QACb,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAElE,IAAI,CAAC,UAAU,EAAE,CAAA;IACrB,CAAC;IAED,MAAM;QACF,MAAM,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAA,OAAO,QAAQ,CAAC,IAAI,OAAO,CAAC,CAAA;QACnF,OAAO,IAAI,CAAA;;;uBAGI,gBAAgB;;;SAG9B,CAAC;IACN,CAAC;CACJ,CAAA;AAjDU,mBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;IAiBnB,CAAC;AAGD;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;0CACI;AArB1B,YAAY;IADjB,aAAa,CAAC,eAAe,CAAC;GACzB,YAAY,CAkDjB","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\nexport interface ICartItem {\n    _id: string\n    name: string\n    quantity: number\n}\n\n/**\n * Shopping cart element.\n */\n@customElement('shopping-cart')\nclass ShoppingCart extends LitElement {\n    static styles = css`\n        .shoppingCart {\n            background-color: #E0DFD5;\n            height: 100%;\n            width: 100%;\n            color: #000;\n            font-family: sans-serif;\n            display: grid;\n            grid-template-rows: auto 1fr auto;\n        }\n        h1 {\n            padding: 10px;\n            text-align: center;\n            color: #313638;\n            margin: 0;\n            margin-top: 10px;\n        }\n   `;\n\n    @property({type: Array})\n    cart: Array<ICartItem> = [];\n\n    updateCart() {\n        fetch(\"http://localhost:8084/cart\")\n            .then(res => res.json())\n            .then((cart: Array<ICartItem>) => {\n                this.setAttribute('cart', JSON.stringify([...cart]))\n            })\n            .catch(console.error)\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.addEventListener('itemAddedToCart', () => this.updateCart());\n\n        this.updateCart()\n    }\n\n    render() {\n        const productTemplates = this.cart.map(cartItem => html`<li>${cartItem.name}</li>`)\n        return html`\n            <div class=\"shoppingCart\">\n                <h1>Shopping Cart</h1>\n                <ul> ${productTemplates} </ul>\n                <ds-button label=\"Place order\"></ds-button>\n            </div>            \n        `;\n    }    \n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'shopping-cart': ShoppingCart;\n    }\n}\n"]}