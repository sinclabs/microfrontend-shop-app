{"version":3,"file":"shopping-cart.js","sourceRoot":"","sources":["src/shopping-cart.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAS5D;;GAEG;AAEH,IAAM,YAAY,GAAlB,MAAM,YAAa,SAAQ,UAAU;IAArC;;QAqBI,aAAQ,GAAoB,EAAE,CAAC;IAoBnC,CAAC;IAlBG,iBAAiB;QACb,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAE1B,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAe,EAAE,EAAE;YAC3E,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC,CAAA;QAC9E,CAAC,CAAkB,CAAC,CAAC;IACzB,CAAC;IAED,MAAM;QACF,MAAM,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAA,OAAO,OAAO,CAAC,IAAI,OAAO,CAAC,CAAA;QACrF,OAAO,IAAI,CAAA;;;uBAGI,gBAAgB;;;SAG9B,CAAC;IACN,CAAC;CACJ,CAAA;AAxCU,mBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;IAiBnB,CAAC;AAGD;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;8CACO;AArB7B,YAAY;IADjB,aAAa,CAAC,eAAe,CAAC;GACzB,YAAY,CAyCjB","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\ninterface IProduct {\n    id: string\n    name: string\n    image: string\n    description: string\n}\n\n/**\n * Shopping cart element.\n */\n@customElement('shopping-cart')\nclass ShoppingCart extends LitElement {\n    static styles = css`\n        .shoppingCart {\n            background-color: #E0DFD5;\n            height: 100%;\n            width: 100%;\n            color: #000;\n            font-family: sans-serif;\n            display: grid;\n            grid-template-rows: auto 1fr auto;\n        }\n        h1 {\n            padding: 10px;\n            text-align: center;\n            color: #313638;\n            margin: 0;\n            margin-top: 10px;\n        }\n   `;\n\n    @property({type: Array})\n    products: Array<IProduct> = [];\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.addEventListener('itemAddedToCart', (({ detail: product }: CustomEvent) => {\n            this.setAttribute('products', JSON.stringify([...this.products, product]))\n        }) as EventListener);\n    }\n\n    render() {\n        const productTemplates = this.products.map(product => html`<li>${product.name}</li>`)\n        return html`\n            <div class=\"shoppingCart\">\n                <h1>Shopping Cart</h1>\n                <ul> ${productTemplates} </ul>\n                <ds-button labelText=\"Place order\"></ds-button>\n            </div>            \n        `;\n    }    \n}\n\ndeclare global {\n    interface HTMLElementTagNameMap {\n        'shopping-cart': ShoppingCart;\n    }\n}\n"]}